#!/bin/bash

#------------------------------------------------------------------------------------
# Params
#------------------------------------------------------------------------------------

SERVER_NAME=$1
if [ -z $SERVER_NAME ] 
then
	echo -e "What is the server name: \c "
	read SERVER_NAME
fi

ADMIN_EMAIL=$2
if [ -z $ADMIN_EMAIL ] 
then
	echo -e "What is the admin email: \c "
	read ADMIN_EMAIL
fi

#------------------------------------------------------------------------------------
# vars
#------------------------------------------------------------------------------------

HTTPD=2.4.23
APR=1.5.2
APRUTIL=1.5.4
OPENSSL=1.0.2h
NGHTTP2=1.14.0
MOD_HTTP2=1.6.1
MOD_SECURITY=2.9.1

#------------------------------------------------------------------------------------
# Install packages
#------------------------------------------------------------------------------------

yum -y update
yum -y install epel-release
yum -y install wget perl gcc pcre-devel openssl-devel nano zlib-devel libxml2-devel automake libtool python-devel lua-devel git cronie crontabs psmisc

#------------------------------------------------------------------------------------
# Download & unzip sources
#------------------------------------------------------------------------------------

mkdir ~/sources
cd ~/sources

wget http://mirror.ox.ac.uk/sites/rsync.apache.org//httpd/httpd-$HTTPD.tar.gz
tar -zxvf httpd-$HTTPD.tar.gz

wget http://mirror.catn.com/pub/apache//apr/apr-$APR.tar.gz
tar -zxvf apr-$APR.tar.gz

wget http://mirror.catn.com/pub/apache//apr/apr-util-$APRUTIL.tar.gz
tar -zxvf apr-util-$APRUTIL.tar.gz

wget https://www.openssl.org/source/openssl-$OPENSSL.tar.gz
tar -zxvf openssl-$OPENSSL.tar.gz

wget https://github.com/nghttp2/nghttp2/releases/download/v$NGHTTP2/nghttp2-$NGHTTP2.tar.gz
tar -zxvf nghttp2-$NGHTTP2.tar.gz

wget https://github.com/icing/mod_h2/releases/download/v1.6.1/mod_http2-$MOD_HTTP2.tar.gz
tar -zxvf mod_http2-$MOD_HTTP2.tar.gz

wget https://www.modsecurity.org/tarball/$MOD_SECURITY/modsecurity-$MOD_SECURITY.tar.gz
tar -zxvf modsecurity-$MOD_SECURITY.tar.gz

wget -O owasp.tar.gz https://github.com/SpiderLabs/owasp-modsecurity-crs/tarball/master

#------------------------------------------------------------------------------------
# Install openssl
#------------------------------------------------------------------------------------

cd ~/sources/openssl-$OPENSSL
./config shared zlib-dynamic
make depend
make
make install
#wait %1

#------------------------------------------------------------------------------------
# Install http2
#------------------------------------------------------------------------------------

cd ~/sources/nghttp2-$NGHTTP2
export OPENSSL_CFLAGS="-I/usr/local/ssl/include"
export OPENSSL_LIBS="-L/usr/local/ssl/lib -lssl -lcrypto"
./configure
make
make install
#wait %1

#------------------------------------------------------------------------------------
# Install apr
#------------------------------------------------------------------------------------

cd ~/sources/apr-$APR
./configure
make
make install
#wait %1

#------------------------------------------------------------------------------------
# Install apr-util
#------------------------------------------------------------------------------------

cd ~/sources/apr-util-$APRUTIL
./configure --with-apr=/usr/local/apr
make
make install
#wait %1

#------------------------------------------------------------------------------------
# Install apache
#------------------------------------------------------------------------------------

cd ~/sources/httpd-$HTTPD
cp -r ../apr-$APR srclib/apr
cp -r ../apr-util-$APRUTIL srclib/apr-util
#LDFLAGS=-L/usr/local/ssl/lib
LDFLAGS=-Wl,-rpath=/usr/local/ssl/lib
./configure --with-ssl=/usr/local/ssl --with-pcre=/usr/bin/pcre-config --enable-unique-id --enable-ssl --enable-so --with-included-apr --enable-http2 --with-mpm=event --enable-deflate --enable-proxy --enable-proxy-html --enable-http --enable-expires --enable-unique-id --enable-rewrite --enable-proxy-fcgi
make
make install
#wait %1

#ln -s /usr/local/ssl/lib/libssl.so.1.0.0 /lib64/libssl.so.1.0.0
#ln -s /usr/local/ssl/lib/libcrypto.so.1.0.0 /lib64/libcrypto.so.1.0.0
#ln -s /usr/local/lib/libnghttp2.so.14 /lib64/libnghttp2.so.14

#------------------------------------------------------------------------------------
# update mod_http2
#------------------------------------------------------------------------------------

cd ~/sources/mod_http2-$MOD_HTTP2
./configure --with-apxs=/usr/local/apache2/bin/apxs
make
make install
#wait %1

#------------------------------------------------------------------------------------
# update apache envvars
#------------------------------------------------------------------------------------

sed -i 's/\/usr\/local\/apache2\/lib/\/usr\/local\/apache2\/lib:\/usr\/local\/lib:\/usr\/local\/ssl\/lib/' /usr/local/apache2/bin/envvars

#------------------------------------------------------------------------------------
# install letsencrypt
#------------------------------------------------------------------------------------

git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
/opt/letsencrypt/letsencrypt-auto
#wait %1

#------------------------------------------------------------------------------------
# install mod security
#------------------------------------------------------------------------------------

cd ~/sources/modsecurity-$MOD_SECURITY
./autogen.sh
./configure --with-apxs=/usr/local/apache2/bin/apxs --with-apr=/usr/local/apache2/bin/apr-1-config --with-apu=/usr/local/apache2/bin/apu-1-config
make
make install
#wait %1
cp /usr/local/modsecurity/lib/mod_security2.so /usr/local/apache2/modules

#------------------------------------------------------------------------------------
# install owasp
#------------------------------------------------------------------------------------

mkdir /usr/local/apache2/conf/crs
cd ~/sources
tar -zxvf owasp.tar.gz -C /usr/local/apache2/conf/crs --strip 1
cp /usr/local/apache2/conf/crs/modsecurity_crs_10_setup.conf.example /usr/local/apache2/conf/crs/modsecurity_crs_10_setup.conf

#------------------------------------------------------------------------------------
# update httpd-security
#------------------------------------------------------------------------------------

echo 'LoadModule security2_module modules/mod_security2.so

<IfModule security2_module>
      Include conf/crs/modsecurity_crs_10_setup.conf
      Include conf/crs/base_rules/*.conf
      # Include conf/crs/experimental_rules/*.conf
      # Include conf/crs/optional_rules/*.conf

      SecRuleEngine On
      SecRequestBodyAccess On
      SecResponseBodyAccess On 
      SecResponseBodyMimeType text/plain text/html text/xml application/octet-stream
      SecDataDir /tmp

      SecRuleRemoveById 960015 960008 981318 960017 960911 981172 981246 950120 970003
      SecRuleRemoveById 970901 981205 970015

      # Debug log
      SecDebugLog /usr/local/apache2/logs/modsec_debug.log
      SecDebugLogLevel 3

      SecAuditEngine RelevantOnly
      SecAuditLogRelevantStatus ^2-5
      SecAuditLogParts ABCIFHZ
      SecAuditLogType Serial
      SecAuditLog /usr/local/apache2/logs/modsec_audit.log
</IfModule>' > /usr/local/apache2/conf/extra/httpd-security.conf

#------------------------------------------------------------------------------------
# create user & groups
#------------------------------------------------------------------------------------

groupadd www
useradd -G www -r apache
chown -R apache:www /usr/local/apache2

#------------------------------------------------------------------------------------
# make base directory
#------------------------------------------------------------------------------------

mkdir /var/www
mkdir /var/www/html
chown -R apache:www /var/www/html
chmod -R 775 /var/www/html

#------------------------------------------------------------------------------------
# update apache conf
#------------------------------------------------------------------------------------

sed -i "/deflate_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/expires_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/unique_id_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/proxy_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/proxy_http_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/proxy_fcgi_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/ssl_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/rewrite_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/http2_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/socache_shmcb_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/log_config_module/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/setenvif_module/s/^#//g" /usr/local/apache2/conf/httpd.conf

sed -i "s/^User daemon/User apache/g" /usr/local/apache2/conf/httpd.conf
sed -i "s/^Group daemon/Group www/g" /usr/local/apache2/conf/httpd.conf

sed -i "s/^ServerAdmin.*/ServerAdmin $ADMIN_EMAIL/g" /usr/local/apache2/conf/httpd.conf

sed -i "s/^#ServerName.*/ServerName $SERVER_NAME:80/g" /usr/local/apache2/conf/httpd.conf

sed -i 's/^DocumentRoot "\/usr\/local\/apache2\/htdocs"/DocumentRoot "\/var\/www\/html"/' /usr/local/apache2/conf/httpd.conf

sed -i 's/^<Directory "\/usr\/local\/apache2\/htdocs">/<Directory "\/var\/www\/html">/' /usr/local/apache2/conf/httpd.conf

sed -i 's/Options Indexes FollowSymLinks/Options -Indexes -FollowSymLinks -Includes/' /usr/local/apache2/conf/httpd.conf

sed -i 's/AllowOverride None/AllowOverride All\
    AcceptPathInfo On/' /usr/local/apache2/conf/httpd.conf
    
sed -i 's/DirectoryIndex index.html/DirectoryIndex index.php index.html index.htm/' /usr/local/apache2/conf/httpd.conf


sed -i "/Include conf\/extra\/httpd-mpm.conf/s/^#//g" /usr/local/apache2/conf/httpd.conf
sed -i "/Include conf\/extra\/httpd-ssl.conf/s/^#//g" /usr/local/apache2/conf/httpd.conf

echo 'Include conf/extra/httpd-security.conf
IncludeOptional conf/vhosts/*.conf

<IfModule http2_module>
    LogLevel http2:info
</IfModule>

#Enable HTTP/2 support
Protocols h2 http/1.1' >> /usr/local/apache2/conf/httpd.conf

#------------------------------------------------------------------------------------
# update httpd-mpm conf
#------------------------------------------------------------------------------------

sed -i 's/PidFile "logs\/httpd.pid"/PidFile "\/var\/run\/httpd.pid"/' /usr/local/apache2/conf/extra/httpd-mpm.conf

sed -i '/StartServers/s/3/2/' /usr/local/apache2/conf/extra/httpd-mpm.conf
sed -i '/MinSpareThreads/s/75/2/' /usr/local/apache2/conf/extra/httpd-mpm.conf
sed -i '/MaxSpareThreads/s/250/4/' /usr/local/apache2/conf/extra/httpd-mpm.conf
sed -i '/MaxRequestWorkers/s/400/300/' /usr/local/apache2/conf/extra/httpd-mpm.conf

#------------------------------------------------------------------------------------
# setup vhosts
#------------------------------------------------------------------------------------

mkdir /usr/local/apache2/conf/vhosts

#------------------------------------------------------------------------------------
# update httpd-security conf
#------------------------------------------------------------------------------------

echo '<IfModule mod_headers.c>
    Header unset ETag
    Header edit Set-Cookie ^(.*)$ $1;HttpOnly;Secure
    Header set X-XSS-Protection "1; mode=block"
    Header set X-Content-Type-Options "nosniff"
</IfModule>

ServerTokens Prod
ServerSignature Off
FileETag None
TraceEnable off
KeepAlive off' > /usr/local/apache2/conf/extra/httpd-security.conf


chown -R apache:www /usr/local/apache2

#------------------------------------------------------------------------------------
# update httpd bash
#------------------------------------------------------------------------------------

wget https://raw.githubusercontent.com/samuelbirch/webserver/master/httpd -P /etc/init.d

chmod +x /etc/init.d/httpd

service httpd restart

#------------------------------------------------------------------------------------
# log rotate
#------------------------------------------------------------------------------------

echo '/var/www/html/*/logs/*.log {
    rotate 5
    daily
    size 128M
    compress
    delaycompress
    sharedscripts

    postrotate
	service httpd graceful > /dev/null
    endscript
}' > /etc/logrotate.d/httpd


#------------------------------------------------------------------------------------
# create cert for server
#------------------------------------------------------------------------------------

service httpd stop
/opt/letsencrypt/letsencrypt-auto certonly --standalone --agree-tos --webroot-path /var/www/html --email $ADMIN_EMAIL -d $SERVER_NAME
service httpd start

sed -i 's/^DocumentRoot.*/DocumentRoot "\/var\/www\/html"/' /usr/local/apache2/conf/extra/httpd-ssl.conf
sed -i "s/^ServerName.*/ServerName $SERVER_NAME:443/" /usr/local/apache2/conf/extra/httpd-ssl.conf
sed -i "s/^ServerAdmin.*/ServerAdmin $ADMIN_EMAIL/" /usr/local/apache2/conf/extra/httpd-ssl.conf

sed -i "s/^SSLCertificateFile.*/SSLCertificateFile '\/etc\/letsencrypt\/live\/$SERVER_NAME\/cert.pem'/" /usr/local/apache2/conf/extra/httpd-ssl.conf
sed -i "s/^SSLCertificateKeyFile.*/SSLCertificateKeyFile '\/etc\/letsencrypt\/live\/$SERVER_NAME\/privkey.pem'/" /usr/local/apache2/conf/extra/httpd-ssl.conf
sed -i "s/^#SSLCertificateChainFile.*/SSLCertificateChainFile '\/etc\/letsencrypt\/live\/$SERVER_NAME\/chain.pem'/" /usr/local/apache2/conf/extra/httpd-ssl.conf

service httpd stop
killall -9 -v httpd
service httpd start

chkconfig httpd on

#------------------------------------------------------------------------------------
# CRON to auto renew SSL cert
#------------------------------------------------------------------------------------

#write out current crontab
crontab -u apache -l > mycron

#echo new cron into cron file
echo "30 2 * * 1 /opt/letsencrypt/letsencrypt-auto renew >> /var/log/le-renew.log" >> mycron

#install new cron file
crontab -u apache mycron
rm mycron

